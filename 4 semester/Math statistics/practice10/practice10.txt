clc;
clear;
pkg load statistics;


N = 8;
p = 0.7;
q = 1 - p;

v = zeros(1, N);
v(1) = v(N) = 1;

v1 = ones(1, N - 1) * p;
v1(1) = 0;

v2 = ones(1, N - 1) * q;
v2(N - 1) = 0;

P = diag(v) + diag(v1, 1) + diag(v2, -1);

p01 = rand(1, N - 4);
p02 = p01 / sum(p01);
p0 = [0, 0, p02, 0, 0];

x0 = zeros(1, N);
x0(1) = p0(1);

for i = 2 : N
  	x0(i) = x0(i - 1) + p0(i);
end;
rnd = rand(1, 1);

j = 1;
while rnd > x0(j)
  	++j;
end;

if p == q
  	p_t = (j - 1) / (N - 1);
else
  	p_t = ((q / p) ^ (j - 1) - (q / p) ^ (N - 1)) / (1 - (q / p) ^ (N - 1));
end;
q_t = 1 - p_t;
lim_t = [p_t, q_t];

n = 1000;
P0 = zeros(1, N);
P0(j) = 1;
P_1000 = P0 * P ^ n;
lim_p1000 = [P_1000(1), P_1000(N)];

m = 30; 
s = zeros(1, m);
s(1) = j;

pn(1, :) = P0;

for i = 2 : m
  	u = rand(1,1);
  	pn(i, :) = P0 * P^(i - 1);
  	if (s(i - 1) == 1 || s(i - 1) == N)
    		s(i) = s(i - 1);
  	elseif (u < q)
    		s(i) = s(i - 1) - 1;
  	else
    		s(i) = s(i - 1) + 1;
  	endif
end;
x = 0 : m - 1;

disp("Matrix")
disp(P);

disp("Start vector");
disp(p0);

disp("Theoretical probability");
disp(lim_t)

disp("Practical probability");
disp(lim_p1000);

figure
plot(x, s, 'r--*')
title('State graph')
xlabel('Time')
ylabel('State')
axis([0 m 0 N])
grid on


figure
plot(x, pn);
title('Probability graph')
xlabel('Time')
ylabel('Probability')
axis([0 m 0 1])
grid on